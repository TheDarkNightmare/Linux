
WINE Layer

Antergos/Manjaro/Arch derivatives (enable multilib in pacman.conf):

sudo pacman -Sy
sudo pacman -S wine-staging winetricks
sudo pacman -S giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo libxcomposite lib32-libxcomposite libxinerama lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader cups samba dosbox
Solus:

sudo eopkg install wine wine-devel wine-32bit-devel winetricks
Ubuntu:

wget -nc https://dl.winehq.org/wine-builds/winehq.key
sudo apt-key add winehq.key
sudo apt-add-repository 'https://dl.winehq.org/wine-builds/ubuntu/'
sudo apt update
sudo apt install --install-recommends winehq-staging
sudo apt install winetricks
Mint:

wget -nc https://dl.winehq.org/wine-builds/winehq.key
sudo apt-key add winehq.key

# For Linux Mint 17.x:

sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ trusty main'

# For Linux Mint 18.x:

sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main'

# For Linux Mint 19.x:

sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'

Then:

sudo apt update
sudo apt install --install-recommends winehq-staging
sudo apt install winetricks
If apt-get complains about missing dependencies, install them, then repeat the last two steps (update and install).

Debian:

sudo dpkg --add-architecture i386

wget -nc https://dl.winehq.org/wine-builds/winehq.key
sudo apt-key add winehq.key
# For Debian Wheezy add the following line:

deb https://dl.winehq.org/wine-builds/debian/ wheezy main
# For Debian Jessie this one:

deb https://dl.winehq.org/wine-builds/debian/ jessie main
# For Debian Stretch this one:

deb https://dl.winehq.org/wine-builds/debian/ stretch main
# For Debian Buster this one:

deb https://dl.winehq.org/wine-builds/debian/ buster main
# And for Debian Sid this one:

deb https://dl.winehq.org/wine-builds/debian/ sid main

sudo apt-get update
sudo apt-get install winehq-staging
sudo apt-get install winetricks
Fedora:


sudo dnf install alsa-plugins-pulseaudio.i686 glibc-devel.i686 glibc-devel libgcc.i686 libX11-devel.i686 freetype-devel.i686 libXcursor-devel.i686 libXi-devel.i686 libXext-devel.i686 libXxf86vm-devel.i686 libXrandr-devel.i686 libXinerama-devel.i686 mesa-libGLU-devel.i686 mesa-libOSMesa-devel.i686 libXrender-devel.i686 libpcap-devel.i686 ncurses-devel.i686 libzip-devel.i686 lcms2-devel.i686 zlib-devel.i686 libv4l-devel.i686 libgphoto2-devel.i686 cups-devel.i686 libxml2-devel.i686 openldap-devel.i686 libxslt-devel.i686 gnutls-devel.i686 libpng-devel.i686 flac-libs.i686 json-c.i686 libICE.i686 libSM.i686 libXtst.i686 libasyncns.i686 liberation-narrow-fonts.noarch libieee1284.i686 libogg.i686 libsndfile.i686 libuuid.i686 libva.i686 libvorbis.i686 libwayland-client.i686 libwayland-server.i686 llvm-libs.i686 mesa-dri-drivers.i686 mesa-filesystem.i686 mesa-libEGL.i686 mesa-libgbm.i686 nss-mdns.i686 ocl-icd.i686 pulseaudio-libs.i686 sane-backends-libs.i686 tcp_wrappers-libs.i686 unixODBC.i686 samba-common-tools.x86_64 samba-libs.x86_64 samba-winbind.x86_64 samba-winbind-clients.x86_64 samba-winbind-modules.x86_64 mesa-libGL-devel.i686 fontconfig-devel.i686 libXcomposite-devel.i686 libtiff-devel.i686 openal-soft-devel.i686 mesa-libOpenCL-devel.i686 opencl-utils-devel.i686 alsa-lib-devel.i686 gsm-devel.i686 libjpeg-turbo-devel.i686 pulseaudio-libs-devel.i686 pulseaudio-libs-devel gtk3-devel.i686 libattr-devel.i686 libva-devel.i686 libexif-devel.i686 libexif.i686 glib2-devel.i686 mpg123-devel.i686 mpg123-devel.x86_64 libcom_err-devel.i686 libcom_err-devel.x86_64 libFAudio-devel.i686 libFAudio-devel.x86_64

sudo dnf groupinstall "C Development Tools and Libraries"
sudo dnf groupinstall "Development Tools"

sudo dnf install wine

-------------------------------------------------------------------------
Drivers NVIDIA / AMD / INTEL


Ubuntu


Nvidia:
To get the latest Nvidia drivers it is necessary to add the Proprietary GPU Drivers PPA:

sudo add-apt-repository ppa:graphics-drivers/ppa
Enable 32 bit architecture (if you haven't already):

sudo dpkg --add-architecture i386 
Update to refresh packages:

sudo apt update
Warning: Please ensure your graphics card is supported by the 450 driver before installing. _For a list of supported GPUs click here: https://www.nvidia.com/Download/driverResults.aspx/163238/en-us

Install the 450 driver:

sudo apt install nvidia-driver-450
Install support for Vulkan API (will be functional only if you have a Vulkan capable GPU):

sudo apt install libvulkan1 libvulkan1:i386
Reboot to apply changes.

AMD / Intel:
Add kisak-mesa PPA:

sudo add-apt-repository ppa:kisak/kisak-mesa
Enable 32 bit architecture (if you haven't already):

sudo dpkg --add-architecture i386 
Upgrade your system:

sudo apt update && sudo apt upgrade
Install support for 32-bit games:

sudo apt install libgl1-mesa-dri:i386
Install support for Vulkan API (will be functional only if you have a Vulkan capable GPU):

sudo apt install mesa-vulkan-drivers mesa-vulkan-drivers:i386
Reboot to apply changes.

Note: Only Ubuntu 18.04 and higher is supported for AMD and Intel graphics.

Note for Intel integrated graphics users: Only Skylake, Kaby Lake, and Coffee Lake offer full Vulkan support. Broadwell, Haswell and Ivy Bridge only offer partial support, which may not work with a lot of games. Sandy Bridge and older lack any Vulkan support whatsoever.

Arch / Manjaro / Other Arch derivatives:
First, enable multilib.

To enable multilib repository, uncomment the [multilib] section in /etc/pacman.conf

/etc/pacman.conf
--------------------------------------------------------------------------------------
[multilib]
Include = /etc/pacman.d/mirrorlist
Then upgrade the system sudo pacman -Syu.

Nvidia:
Warning: Please ensure your graphics card is supported by modern Nvidia driver before installing. For a list of supported GPUs click here: https://www.nvidia.com/Download/driverResults.aspx/149138/en-us

Proprietary driver and support for Vulkan are required for proper functionality of games.

To install it, execute following command:

sudo pacman -S nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader
AMD
To install support for Vulkan API (will be functional only if you have a Vulkan capable GPU) and 32-bit games, execute following command:

sudo pacman -S lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader
Intel
To install support for Vulkan API (will be functional only if you have a Vulkan capable GPU) and 32-bit games, execute following command:

sudo pacman -S lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-icd-loader lib32-vulkan-icd-loader
Note: Only Skylake, Kaby Lake, and Coffee Lake offer full Vulkan support. Broadwell, Haswell and Ivy Bridge only offer partial support, which may not work with a lot of games. Sandy Bridge and older lack any Vulkan support whatsoever.

Fedora 
Note: Dnf will pull most, if not all, AMD/Intel drivers with an install of Lutris, Wine, and/or Steam. Unless on an NVIDIA card, the following guide may be redundant.

To install support for Vulkan API (will be functional only if you have a Vulkan capable GPU and driver), execute following command:

sudo dnf install vulkan-loader vulkan-loader.i686
Nvidia:
Warning: Please ensure your graphics card is supported by modern Nvidia driver before installing. For a list of supported GPUs click here: https://www.nvidia.com/Download/driverResults.aspx/149138/en-us

Proprietary driver and support for Vulkan are required for proper functionality of games.

First, update (and reboot) your system:

sudo dnf update
reboot
Next, make sure the official repos are installed:

sudo dnf install fedora-workstation-repositories
Enable the NVIDIA driver repo:

sudo dnf config-manager --set-enabled rpmfusion-nonfree-nvidia-driver
Reboot again. After the reboot, verify the addition of the repository via the following command:

sudo dnf repository-packages rpmfusion-nonfree-nvidia-driver info
If several NVIDIA drivers are loaded, you are good to go. Finally, login, connect to the internet, and open the software app. Click Add-ons> Hardware Drivers> NVIDIA Linux Graphics Driver> Install.

If you’re using an older GPU or plan to use multiple GPUs, check the RPMFusion guide for further instructions. Finally, to ensure a successful reboot, set “WaylandEnable=false” in /etc/gdm/custom.conf, and make sure to avoid using secure boot.


------------------------------------------------------------------------------

Battle.Net

Additional dependencies required specifically for Battle.net:
These dependencies may already be installed on your system, but it won't hurt to ensure you have them.

Ubuntu: libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libsqlite3-0:i386
Arch: lib32-gnutls lib32-libldap lib32-libgpg-error lib32-sqlite lib32-libpulse
Fedora: gnutls gnutls-devel openldap openldap-devel libgpg-error sqlite2.i686 sqlite2.x86_64 (Both i686 and x86_64 versions)
Solus: libgnutls libgnutls-devel libgnutls-32bit libgnutls-32bit-devel openldap-devel openldap-32bit-devel libgpg-error-devel libgpg-error-32bit libgpg-error-32bit-devel sqlite3 sqlite3-32bit
OpenSuse: libgnutls.so.30 libgnutls-devel libgnutls.so.28 libldap libgpg-error libvulkan_radeon-32bit (Or libgpg-error.so.0)
Gentoo: gnutls libgpg-error sqlite app-crypt/p11-kit sys-libs/readline libusb, all with abi_x86_32 enabled

------------------------------------------------------------------------------